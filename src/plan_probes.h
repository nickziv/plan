/*
 * Generated by dtrace(1M).
 */

#ifndef	_PLAN_PROBES_H
#define	_PLAN_PROBES_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#if _DTRACE_VERSION

#define	PLAN_ACT_PTR(arg0) \
	__dtrace_plan___act_ptr(arg0)
#ifndef	__sparc
#define	PLAN_ACT_PTR_ENABLED() \
	__dtraceenabled_plan___act_ptr()
#else
#define	PLAN_ACT_PTR_ENABLED() \
	__dtraceenabled_plan___act_ptr(0)
#endif
#define	PLAN_ATOMIC_READ(arg0, arg1, arg2) \
	__dtrace_plan___atomic_read(arg0, arg1, arg2)
#ifndef	__sparc
#define	PLAN_ATOMIC_READ_ENABLED() \
	__dtraceenabled_plan___atomic_read()
#else
#define	PLAN_ATOMIC_READ_ENABLED() \
	__dtraceenabled_plan___atomic_read(0)
#endif
#define	PLAN_ATOMIC_WRITE(arg0, arg1, arg2) \
	__dtrace_plan___atomic_write(arg0, arg1, arg2)
#ifndef	__sparc
#define	PLAN_ATOMIC_WRITE_ENABLED() \
	__dtraceenabled_plan___atomic_write()
#else
#define	PLAN_ATOMIC_WRITE_ENABLED() \
	__dtraceenabled_plan___atomic_write(0)
#endif
#define	PLAN_COMMIT_ACT(arg0, arg1, arg2) \
	__dtrace_plan___commit_act(arg0, arg1, arg2)
#ifndef	__sparc
#define	PLAN_COMMIT_ACT_ENABLED() \
	__dtraceenabled_plan___commit_act()
#else
#define	PLAN_COMMIT_ACT_ENABLED() \
	__dtraceenabled_plan___commit_act(0)
#endif
#define	PLAN_COMMIT_ACTS_LOOP(arg0) \
	__dtrace_plan___commit_acts_loop(arg0)
#ifndef	__sparc
#define	PLAN_COMMIT_ACTS_LOOP_ENABLED() \
	__dtraceenabled_plan___commit_acts_loop()
#else
#define	PLAN_COMMIT_ACTS_LOOP_ENABLED() \
	__dtraceenabled_plan___commit_acts_loop(0)
#endif
#define	PLAN_DO_DUR(arg0, arg1) \
	__dtrace_plan___do_dur(arg0, arg1)
#ifndef	__sparc
#define	PLAN_DO_DUR_ENABLED() \
	__dtraceenabled_plan___do_dur()
#else
#define	PLAN_DO_DUR_ENABLED() \
	__dtraceenabled_plan___do_dur(0)
#endif
#define	PLAN_GOTHERE(arg0) \
	__dtrace_plan___gothere(arg0)
#ifndef	__sparc
#define	PLAN_GOTHERE_ENABLED() \
	__dtraceenabled_plan___gothere()
#else
#define	PLAN_GOTHERE_ENABLED() \
	__dtraceenabled_plan___gothere(0)
#endif
#define	PLAN_NTIMES(arg0) \
	__dtrace_plan___ntimes(arg0)
#ifndef	__sparc
#define	PLAN_NTIMES_ENABLED() \
	__dtraceenabled_plan___ntimes()
#else
#define	PLAN_NTIMES_ENABLED() \
	__dtraceenabled_plan___ntimes(0)
#endif
#define	PLAN_PARSE_DUR(arg0) \
	__dtrace_plan___parse_dur(arg0)
#ifndef	__sparc
#define	PLAN_PARSE_DUR_ENABLED() \
	__dtraceenabled_plan___parse_dur()
#else
#define	PLAN_PARSE_DUR_ENABLED() \
	__dtraceenabled_plan___parse_dur(0)
#endif
#define	PLAN_PRECOMMIT_DUR(arg0, arg1) \
	__dtrace_plan___precommit_dur(arg0, arg1)
#ifndef	__sparc
#define	PLAN_PRECOMMIT_DUR_ENABLED() \
	__dtraceenabled_plan___precommit_dur()
#else
#define	PLAN_PRECOMMIT_DUR_ENABLED() \
	__dtraceenabled_plan___precommit_dur(0)
#endif
#define	PLAN_READ_ACT(arg0, arg1, arg2) \
	__dtrace_plan___read_act(arg0, arg1, arg2)
#ifndef	__sparc
#define	PLAN_READ_ACT_ENABLED() \
	__dtraceenabled_plan___read_act()
#else
#define	PLAN_READ_ACT_ENABLED() \
	__dtraceenabled_plan___read_act(0)
#endif
#define	PLAN_READ_TODO(arg0, arg1) \
	__dtrace_plan___read_todo(arg0, arg1)
#ifndef	__sparc
#define	PLAN_READ_TODO_ENABLED() \
	__dtraceenabled_plan___read_todo()
#else
#define	PLAN_READ_TODO_ENABLED() \
	__dtraceenabled_plan___read_todo(0)
#endif
#define	PLAN_REALLOC_LOOP(arg0) \
	__dtrace_plan___realloc_loop(arg0)
#ifndef	__sparc
#define	PLAN_REALLOC_LOOP_ENABLED() \
	__dtraceenabled_plan___realloc_loop()
#else
#define	PLAN_REALLOC_LOOP_ENABLED() \
	__dtraceenabled_plan___realloc_loop(0)
#endif
#define	PLAN_SET_DUR(arg0, arg1) \
	__dtrace_plan___set_dur(arg0, arg1)
#ifndef	__sparc
#define	PLAN_SET_DUR_ENABLED() \
	__dtraceenabled_plan___set_dur()
#else
#define	PLAN_SET_DUR_ENABLED() \
	__dtraceenabled_plan___set_dur(0)
#endif
#define	PLAN_VMEM_CREATE(arg0) \
	__dtrace_plan___vmem_create(arg0)
#ifndef	__sparc
#define	PLAN_VMEM_CREATE_ENABLED() \
	__dtraceenabled_plan___vmem_create()
#else
#define	PLAN_VMEM_CREATE_ENABLED() \
	__dtraceenabled_plan___vmem_create(0)
#endif
#define	PLAN_VMEM_XALLOC(arg0, arg1, arg2, arg3) \
	__dtrace_plan___vmem_xalloc(arg0, arg1, arg2, arg3)
#ifndef	__sparc
#define	PLAN_VMEM_XALLOC_ENABLED() \
	__dtraceenabled_plan___vmem_xalloc()
#else
#define	PLAN_VMEM_XALLOC_ENABLED() \
	__dtraceenabled_plan___vmem_xalloc(0)
#endif


extern void __dtrace_plan___act_ptr(void *);
#ifndef	__sparc
extern int __dtraceenabled_plan___act_ptr(void);
#else
extern int __dtraceenabled_plan___act_ptr(long);
#endif
extern void __dtrace_plan___atomic_read(int, uint64_t, size_t);
#ifndef	__sparc
extern int __dtraceenabled_plan___atomic_read(void);
#else
extern int __dtraceenabled_plan___atomic_read(long);
#endif
extern void __dtrace_plan___atomic_write(int, uint64_t, size_t);
#ifndef	__sparc
extern int __dtraceenabled_plan___atomic_write(void);
#else
extern int __dtraceenabled_plan___atomic_write(long);
#endif
extern void __dtrace_plan___commit_act(char *, int, size_t);
#ifndef	__sparc
extern int __dtraceenabled_plan___commit_act(void);
#else
extern int __dtraceenabled_plan___commit_act(long);
#endif
extern void __dtrace_plan___commit_acts_loop(void *);
#ifndef	__sparc
extern int __dtraceenabled_plan___commit_acts_loop(void);
#else
extern int __dtraceenabled_plan___commit_acts_loop(long);
#endif
extern void __dtrace_plan___do_dur(void *, size_t);
#ifndef	__sparc
extern int __dtraceenabled_plan___do_dur(void);
#else
extern int __dtraceenabled_plan___do_dur(long);
#endif
extern void __dtrace_plan___gothere(int);
#ifndef	__sparc
extern int __dtraceenabled_plan___gothere(void);
#else
extern int __dtraceenabled_plan___gothere(long);
#endif
extern void __dtrace_plan___ntimes(int);
#ifndef	__sparc
extern int __dtraceenabled_plan___ntimes(void);
#else
extern int __dtraceenabled_plan___ntimes(long);
#endif
extern void __dtrace_plan___parse_dur(size_t);
#ifndef	__sparc
extern int __dtraceenabled_plan___parse_dur(void);
#else
extern int __dtraceenabled_plan___parse_dur(long);
#endif
extern void __dtrace_plan___precommit_dur(char *, size_t);
#ifndef	__sparc
extern int __dtraceenabled_plan___precommit_dur(void);
#else
extern int __dtraceenabled_plan___precommit_dur(long);
#endif
extern void __dtrace_plan___read_act(char *, int, size_t);
#ifndef	__sparc
extern int __dtraceenabled_plan___read_act(void);
#else
extern int __dtraceenabled_plan___read_act(long);
#endif
extern void __dtrace_plan___read_todo(char *, int);
#ifndef	__sparc
extern int __dtraceenabled_plan___read_todo(void);
#else
extern int __dtraceenabled_plan___read_todo(long);
#endif
extern void __dtrace_plan___realloc_loop(void *);
#ifndef	__sparc
extern int __dtraceenabled_plan___realloc_loop(void);
#else
extern int __dtraceenabled_plan___realloc_loop(long);
#endif
extern void __dtrace_plan___set_dur(char *, size_t);
#ifndef	__sparc
extern int __dtraceenabled_plan___set_dur(void);
#else
extern int __dtraceenabled_plan___set_dur(long);
#endif
extern void __dtrace_plan___vmem_create(void *);
#ifndef	__sparc
extern int __dtraceenabled_plan___vmem_create(void);
#else
extern int __dtraceenabled_plan___vmem_create(long);
#endif
extern void __dtrace_plan___vmem_xalloc(void *, size_t, void *, void *);
#ifndef	__sparc
extern int __dtraceenabled_plan___vmem_xalloc(void);
#else
extern int __dtraceenabled_plan___vmem_xalloc(long);
#endif

#else

#define	PLAN_ACT_PTR(arg0)
#define	PLAN_ACT_PTR_ENABLED() (0)
#define	PLAN_ATOMIC_READ(arg0, arg1, arg2)
#define	PLAN_ATOMIC_READ_ENABLED() (0)
#define	PLAN_ATOMIC_WRITE(arg0, arg1, arg2)
#define	PLAN_ATOMIC_WRITE_ENABLED() (0)
#define	PLAN_COMMIT_ACT(arg0, arg1, arg2)
#define	PLAN_COMMIT_ACT_ENABLED() (0)
#define	PLAN_COMMIT_ACTS_LOOP(arg0)
#define	PLAN_COMMIT_ACTS_LOOP_ENABLED() (0)
#define	PLAN_DO_DUR(arg0, arg1)
#define	PLAN_DO_DUR_ENABLED() (0)
#define	PLAN_GOTHERE(arg0)
#define	PLAN_GOTHERE_ENABLED() (0)
#define	PLAN_NTIMES(arg0)
#define	PLAN_NTIMES_ENABLED() (0)
#define	PLAN_PARSE_DUR(arg0)
#define	PLAN_PARSE_DUR_ENABLED() (0)
#define	PLAN_PRECOMMIT_DUR(arg0, arg1)
#define	PLAN_PRECOMMIT_DUR_ENABLED() (0)
#define	PLAN_READ_ACT(arg0, arg1, arg2)
#define	PLAN_READ_ACT_ENABLED() (0)
#define	PLAN_READ_TODO(arg0, arg1)
#define	PLAN_READ_TODO_ENABLED() (0)
#define	PLAN_REALLOC_LOOP(arg0)
#define	PLAN_REALLOC_LOOP_ENABLED() (0)
#define	PLAN_SET_DUR(arg0, arg1)
#define	PLAN_SET_DUR_ENABLED() (0)
#define	PLAN_VMEM_CREATE(arg0)
#define	PLAN_VMEM_CREATE_ENABLED() (0)
#define	PLAN_VMEM_XALLOC(arg0, arg1, arg2, arg3)
#define	PLAN_VMEM_XALLOC_ENABLED() (0)

#endif


#ifdef	__cplusplus
}
#endif

#endif	/* _PLAN_PROBES_H */
